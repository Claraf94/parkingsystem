/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package distsys.smartparking;

import grpc.generated.TicketPayment.TicketPaymentServiceGrpc;
import java.awt.Color;
import java.io.IOException;
import java.util.logging.Logger;
import grpc.generated.VehicleEntryExit.*;
import grpc.generated.VehicleEntryExit.VehicleEntryExitServiceGrpc.VehicleEntryExitServiceBlockingStub;
import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;
import io.grpc.Server;
import io.grpc.ServerBuilder;
import io.grpc.StatusRuntimeException;
import io.grpc.stub.StreamObserver;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;

/**
 * This GUI represents also the EntryExit Client class and it simulates vehicles
 * entry and exit the communication between client and server occurs through a
 * blocking stub (synchronous call)
 */
public class EntryExitClientGUI extends javax.swing.JFrame {

    private static final Logger logger = Logger.getLogger(EntryExitClientGUI.class.getName());
    //gRPC blocking stub for unary service
    private VehicleEntryExitServiceBlockingStub blockingStub;
    private ManagedChannel channel;
    //store the number plate
    private String vehicleRegistration;

    /**
     * Creates new form EntryExitGUI
     */
    public EntryExitClientGUI() {
        initComponents();

        //gRPC channel settings
        String host = "localhost";
        int port = 50051;
        channel = ManagedChannelBuilder.
                forAddress(host, port)
                .usePlaintext()
                .intercept(new SmartParkingClientInterceptor())
                .build();
        //create an instance of the BearerToken from the generated JWT and 
        //make a stub in the main method of our client to use it
        String jwt = getJwt();
        BearerToken token = new BearerToken(jwt);
        blockingStub = VehicleEntryExitServiceGrpc.newBlockingStub(channel)
                .withCallCredentials(token)
                .withDeadlineAfter(5, TimeUnit.SECONDS);
    }

    private static String getJwt() {
        return Jwts.builder()
                .setSubject("EntryExitGUI") // client's identifier
                .signWith(SignatureAlgorithm.HS256, Constants.JWT_SIGNING_KEY)
                .compact();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numberPlate = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        vehicleEntry = new javax.swing.JButton();
        vehicleExit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        numberPlate.setToolTipText("Format: D01-A-12345");
        numberPlate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberPlateActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Please, enter the number plate of the vehicle:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Operation:");

        vehicleEntry.setText("Entry");
        vehicleEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleEntryActionPerformed(evt);
            }
        });

        vehicleExit.setText("Exit");
        vehicleExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleExitActionPerformed(evt);
            }
        });

        output.setEditable(false);
        output.setColumns(20);
        output.setLineWrap(true);
        output.setRows(5);
        jScrollPane1.setViewportView(output);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(vehicleEntry)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(vehicleExit)
                        .addGap(89, 89, 89))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(numberPlate, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(16, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(numberPlate, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vehicleEntry)
                    .addComponent(vehicleExit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //gets the number plate information
    private void numberPlateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberPlateActionPerformed
        vehicleRegistration = this.numberPlate.getText().trim();
        System.out.println("Vehicle registration plate: " + vehicleRegistration);       
    }//GEN-LAST:event_numberPlateActionPerformed
    
    //send the entry request to the server
    private void vehicleEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleEntryActionPerformed
        vehicleRegistration = this.numberPlate.getText().trim().toUpperCase();
        try {
            ClientReply response = clientHelperVehicleEntryExit(vehicleRegistration, "Entry");
            output.setText("Entry details:\n" + response.getMessage());
        }catch (StatusRuntimeException e) {
            logger.log(Level.WARNING, "RPC failed: {0}",e.getStatus());
            output.setText("Server failed to answer.");
            return;
        }catch(Exception e){
            output.setText("Unknown error: " + e.getMessage());
        }
        //reseting the input
        numberPlate.setText("");
    }//GEN-LAST:event_vehicleEntryActionPerformed
    
    //send the exit request to the server
    private void vehicleExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleExitActionPerformed
        vehicleRegistration = this.numberPlate.getText().trim().toUpperCase();
        try {
            ClientReply response = clientHelperVehicleEntryExit(vehicleRegistration, "Exit");
            output.setText("Exit details:\n" + response.getMessage() + "\nPayment confirmed: " + response.getConfirmation());
        }catch (StatusRuntimeException e) {
            logger.log(Level.WARNING, "RPC failed: {0}",e.getStatus());
            output.setText("Server failed to answer.");
            return;
        }catch(Exception e){
            output.setText("Unknown error: " + e.getMessage());
        }
        //reseting the input
        numberPlate.setText("");           
    }//GEN-LAST:event_vehicleExitActionPerformed
    
    /*
    *this method invokes the service 
    *@param numberPlate, operation
    */
    public ClientReply clientHelperVehicleEntryExit(String numberPlate, String operation) {
        ClientRequest request = ClientRequest.newBuilder()
                .setNumberPlate(numberPlate)
                .setOperation(operation)
                .build();
        return blockingStub.performingVehicleEntryExit(request);
      }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EntryExitClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EntryExitClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EntryExitClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EntryExitClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EntryExitClientGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField numberPlate;
    private javax.swing.JTextArea output;
    private javax.swing.JButton vehicleEntry;
    private javax.swing.JButton vehicleExit;
    // End of variables declaration//GEN-END:variables
}
